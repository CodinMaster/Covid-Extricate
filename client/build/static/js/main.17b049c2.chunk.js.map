{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","assets/img/emilyz.jpg","graphQl.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","components/FixedPlugin/FixedPlugin.js","components/Stats.js","variables/charData1.js","components/graph.js","components/table.js","views/Dashboard.js","views/Map.js","ethereum/parent.js","ethereum/camp.js","views/ts.js","views/details.js","views/Notifications copy.js","views/Notifications.js","views/TableList.js","components/graphLine.js","views/timeline.js","views/TypographyCopy.js","views/UserProfile.js","layouts/Admin/Admin.js","routes.js","index.js","assets/img/react-logo.png","ethereum/web3.js","views/UploadImage.js","ethereum/covidCatchContract.js","ethereum/ipfs.js","variables/charts.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","cache","InMemoryCache","link","HttpLink","uri","client","ApolloClient","AdminNavbar","React","Component","constructor","props","super","updateColor","window","innerWidth","this","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","type","onClick","toggleSidebar","NavbarBrand","href","preventDefault","brandText","aria-expanded","aria-label","data-target","data-toggle","Collapse","navbar","isOpen","Nav","UncontrolledDropdown","nav","DropdownToggle","caret","alt","src","require","Footer","ps","Sidebar","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","logo","rtlActive","logoImg","logoText","undefined","outterLink","target","imgSrc","text","to","innerLink","data","ref","map","prop","key","redirect","path","pro","layout","activeClassName","icon","name","defaultProps","FixedPlugin","handleClick","classes","activateMode","mode","body","add","data-color","handleBgClick","GETLIST","gql","World","query","loading","error","message","rapidapi","world","total_recovered","total_deaths","total_cases","new_deaths","new_cases","statistic_taken_at","Col","md","Card","CardBody","Table","hover","scope","chartData","labels","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","datasets","label","fill","backgroundColor","hoverBackgroundColor","borderColor","borderWidth","borderDash","borderDashOffset","options","maintainAspectRatio","legend","display","tooltips","titleFontColor","bodyFontColor","bodySpacing","xPadding","intersect","position","responsive","scales","yAxes","gridLines","drawBorder","zeroLineColor","ticks","padding","fontColor","xAxes","Graph","useQuery","arr1","arr2","country","forEach","value","index","push","country_name","str","cases","replace","parseInt","ChartData","slice","CardHeader","CardTitle","tag","TableComp","arr","lg","console","log","deaths","serious_critical","active_cases","total_cases_per_1m_population","Dashboard","setBgChartData","bigChartData","Stats","Row","xs","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","styles","elementType","stylers","featureType","Map","abi","CovidExtricate","instance","web3","eth","Contract","DonationCamp","address","Tr","useState","money","update","description","updateValue","useEffect","a","camp","methods","getValues","call","values","onChange","Button","getAccounts","accounts","contribute","send","from","utils","toWei","transferFund","Details","Amount","Name","Description","Links","onSubmit","parent","CreateCamp","result","Form","FormGroup","Input","placeholder","cols","rows","htmlFor","CardFooter","Notifications","notify","place","Math","floor","random","autoDismiss","notificationAlert","camps","getDeployedCamps","Notification","isMetaMask","installMetamask","Fragment","currentProvider","ethereum","enable","recorddata","date","record_date","substr","reverse","Timeline","variables","inputString","historyCountry","array","filter","element","total_cases_per1m","TypographyContainer","InputGroup","UserProfile","component","Typography","UploadImage","Admin","toggle","getRoutes","getBrandText","i","length","mainPanel","tables","querySelectorAll","componentDidUpdate","history","action","scrollTop","scrollingElement","hist","createBrowserHistory","ReactDOM","getElementById","Web3","provider","providers","HttpProvider","getFiles","contract","getReportsCount","filesLength","files","reports","file","solidityDrive","captureFile","event","stopPropagation","reader","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","buffer","handleSubmit","ipfs","err","ipfsHash","hash","fileuploaded","newReport","gas","setField","submit","takeAction","setActionTaken","isOwner","owner","then","aria-describedby","style","height","width","item","format","unix","reportedAt","proof_ipfs_hash","actionTaken","idVerify","host","port","protocol","chart1_2_options","barPercentage","suggestedMin","suggestedMax","chartExample1","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","chartExample2","chartExample4"],"mappings":"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","file":"static/js/main.17b049c2.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1065;","module.exports = __webpack_public_path__ + \"static/media/emilyz.9fcf69e5.jpg\";","import ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: \"https://covidextricate.herokuapp.com/api\",\n});\n\nconst client = new ApolloClient({\n  cache,\n  link,\n});\nexport default client;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\",\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\",\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\",\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\",\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen,\n    });\n  };\n  // this function is to open the Search modal\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch,\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened,\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                {this.props.brandText}\n              </NavbarBrand>\n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n                {/* <InputGroup className=\"search-bar\">\n                  <Button\n                    color=\"link\"\n                    data-target=\"#searchModal\"\n                    data-toggle=\"modal\"\n                    id=\"search-button\"\n                    onClick={this.toggleModalSearch}\n                  >\n                    <i className=\"tim-icons icon-zoom-split\" />\n                    <span className=\"d-lg-none d-md-block\">Search</span>\n                  </Button>\n                </InputGroup> */}\n\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/react-logo.png\")}\n                      />\n                    </div>\n                    {/* <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Log out</p> */}\n                  </DropdownToggle>\n                  {/* <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                    </NavLink>\n                    <DropdownItem divider tag=\"li\" />\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Log out</DropdownItem>\n                    </NavLink>\n                  </DropdownMenu> */}\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        {/* <Modal\n          modalClassName=\"modal-search\"\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal> */}\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\n// reactstrap components\nimport { Container, Row, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return <footer className=\"footer\"></footer>;\n  }\n}\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  render() {\n    const { bgColor, routes, rtlActive, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </Link>\n        );\n        logoText = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </Link>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav>\n            {routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.props.toggleSidebar}\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\n\n// reactstrap components\nimport { Button } from \"reactstrap\";\n\nclass FixedPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classes: \"dropdown show-dropdown\",\n    };\n  }\n  handleClick = () => {\n    if (this.state.classes === \"dropdown show-dropdown\") {\n      this.setState({ classes: \"dropdown show-dropdown show\" });\n    } else {\n      this.setState({ classes: \"dropdown show-dropdown\" });\n    }\n  };\n  activateMode = (mode) => {\n    switch (mode) {\n      case \"light\":\n        document.body.classList.add(\"white-content\");\n        break;\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  };\n  render() {\n    return (\n      <div className=\"fixed-plugin\">\n        <div className={this.state.classes}>\n          <div onClick={this.handleClick}>\n            <i className=\"fa fa-cog fa-2x\" />\n          </div>\n          <ul className=\"dropdown-menu show\">\n            <li className=\"header-title\">SIDEBAR BACKGROUND</li>\n            <li className=\"adjustments-line\">\n              <div className=\"badge-colors text-center\">\n                <span\n                  className={\n                    this.props.bgColor === \"primary\"\n                      ? \"badge filter badge-primary active\"\n                      : \"badge filter badge-primary\"\n                  }\n                  data-color=\"primary\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"primary\");\n                  }}\n                />{\" \"}\n                <span\n                  className={\n                    this.props.bgColor === \"blue\"\n                      ? \"badge filter badge-info active\"\n                      : \"badge filter badge-info\"\n                  }\n                  data-color=\"blue\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"blue\");\n                  }}\n                />{\" \"}\n                <span\n                  className={\n                    this.props.bgColor === \"green\"\n                      ? \"badge filter badge-success active\"\n                      : \"badge filter badge-success\"\n                  }\n                  data-color=\"green\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"green\");\n                  }}\n                />{\" \"}\n              </div>\n            </li>\n            <li className=\"adjustments-line text-center color-change\">\n              <span className=\"color-label\">LIGHT MODE</span>{\" \"}\n              <span\n                className=\"badge light-badge mr-2\"\n                onClick={() => this.activateMode(\"light\")}\n              />{\" \"}\n              <span\n                className=\"badge dark-badge ml-2\"\n                onClick={() => this.activateMode(\"dark\")}\n              />{\" \"}\n              <span className=\"color-label\">DARK MODE</span>{\" \"}\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FixedPlugin;\n","import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Query } from \"react-apollo\";\nimport { Col, Card, CardBody, Table } from \"reactstrap\";\n\nconst GETLIST = gql`\n  {\n    rapidapi {\n      world {\n        total_cases\n        total_deaths\n        total_recovered\n        new_cases\n        new_deaths\n        statistic_taken_at\n      }\n    }\n  }\n`;\n\nconst World = () => (\n  <Query query={GETLIST}>\n    {({ loading, error, data }) => {\n      if (loading) return \"Loading...\";\n      if (error) return `Error ${error.message}`;\n      const {\n        total_recovered,\n        total_deaths,\n        total_cases,\n        new_deaths,\n        new_cases,\n        statistic_taken_at,\n      } = data.rapidapi.world;\n\n      return (\n        <Col md=\"12\">\n          <Card>\n            <CardBody>\n              <Table hover>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Total Cases</td>\n                    <td>{total_cases}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Total Deaths</td>\n                    <td>{total_deaths}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Total Recovered</td>\n                    <td>{total_recovered}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">4</th>\n                    <td>New Cases (since :{statistic_taken_at})</td>\n                    <td>{new_cases}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">5</th>\n                    <td>New Death (since :{statistic_taken_at})</td>\n                    <td>{new_deaths}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      );\n    }}\n  </Query>\n);\n\nexport default World;\n","// const response = fetch(\"http://localhost:4000/api\", {\n//   method: \"POST\",\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     Accept: \"application/json\",\n//   },\n//   body: JSON.stringify({\n//     query: `query rapid($input:String){\n//         rapidapi(input:$input){\n//         country{\n//           country_name\n//           cases\n//           deaths\n//         }\n//         }\n//         }`,\n//   }),\n// })\n//   .then((r) => r.json())\n//   .then((data) => console.log(\"data returned:\", data));\n\nconst chartData = (labels, data) => {\n  return {\n    data: (canvas) => {\n      let ctx = canvas.getContext(\"2d\");\n\n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n      gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n      gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n      gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n      return {\n        labels: labels,\n        datasets: [\n          {\n            label: \"Countries\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            hoverBackgroundColor: gradientStroke,\n            borderColor: \"#d048b6\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            data: data,\n          },\n        ],\n      };\n    },\n    options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        backgroundColor: \"#f5f5f5\",\n        titleFontColor: \"#333\",\n        bodyFontColor: \"#666\",\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\",\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(225,78,202,0.1)\",\n              zeroLineColor: \"transparent\",\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9e9e9e\",\n            },\n          },\n        ],\n        xAxes: [\n          {\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(225,78,202,0.1)\",\n              zeroLineColor: \"transparent\",\n            },\n            ticks: {\n              fontColor: \"#9e9e9e\",\n            },\n          },\n        ],\n      },\n    },\n  };\n};\n\nexport default chartData;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport chartData from \"../variables/charData1.js\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst GETLIST = gql`\n  {\n    rapidapi {\n      country {\n        country_name\n        cases\n        deaths\n      }\n    }\n  }\n`;\nconst Graph = () => {\n  const data = useQuery(GETLIST);\n\n  if (data.loading) return <p>Loading...</p>;\n  if (data.error) return <p>ERROR</p>;\n  var arr1 = [];\n  var arr2 = [];\n  data.data.rapidapi.country.forEach((value, index) => {\n    arr1.push(value.country_name);\n    const str = value.cases.replace(\",\", \"\");\n    arr2.push(parseInt(str));\n  });\n  const ChartData = chartData(arr1.slice(0, 20), arr2.slice(0, 20));\n  return (\n    <Card className=\"card-chart\">\n      <CardHeader>\n        <h5 className=\"card-category\"></h5>\n        <CardTitle tag=\"h3\">\n          <i className=\"tim-icons icon-delivery-fast text-primary\" />\n          World Statistics\n        </CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className=\"chart-area\">\n          <Bar data={ChartData.data} options={ChartData.options} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Graph;\n","import React, { PureComponent } from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle, Col, Table } from \"reactstrap\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst GETLIST = gql`\n  {\n    rapidapi {\n      country {\n        country_name\n        cases\n        deaths\n        total_recovered\n        new_deaths\n        new_cases\n        serious_critical\n        active_cases\n        total_cases_per_1m_population\n      }\n    }\n  }\n`;\n\nconst TableComp = (props) => {\n  const data = useQuery(GETLIST);\n\n  if (data.loading) return <p>Loading...</p>;\n  if (data.error) return <p>ERROR</p>;\n\n  const arr = data.data.rapidapi.country;\n  return (\n    <Card>\n      <Col lg=\"12\" md=\"12\">\n        <Card className=\"card-tasks\">\n          <CardHeader>\n            <CardTitle tag=\"h4\">Country Wise Statistics</CardTitle>\n          </CardHeader>\n          <CardBody>\n            <div className=\"table-full-width table-responsive\">\n              <Table className=\"tablesorter\" responsive>\n                <thead className=\"text-primary\">\n                  <tr>\n                    <th>Country</th>\n                    <th>Total Cases</th>\n                    <th>Total Deaths</th>\n                    <th className=\"text-center\">Total Recovered</th>\n                    <th className=\"text-center\">New Deaths</th>\n                    <th className=\"text-center\">New Cases</th>\n                    <th className=\"text-center\">Serious/Critical</th>\n                    <th className=\"text-center\">Active Cases</th>\n                    <th className=\"text-center\">\n                      Total Cases per 1M population\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {arr.map((value, index) => {\n                    console.log(value.country_name);\n                    return (\n                      <tr>\n                        <td>{value.country_name}</td>\n                        <td>{value.cases}</td>\n                        <td>{value.deaths}</td>\n                        <td className=\"text-center\">{value.total_recovered}</td>\n                        <td className=\"text-center\">{value.new_deaths}</td>\n                        <td className=\"text-center\">{value.new_cases}</td>\n                        <td className=\"text-center\">\n                          {value.serious_critical}\n                        </td>\n                        <td className=\"text-center\">{value.active_cases}</td>\n                        <td className=\"text-center\">\n                          {value.total_cases_per_1m_population}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </div>\n          </CardBody>\n        </Card>\n      </Col>\n    </Card>\n  );\n};\n\nexport default TableComp;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport Stats from \"../components/Stats\";\nimport Graph from \"../components/graph\";\nimport Table from \"../components/table\";\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Label,\n  FormGroup,\n  ListGroup,\n  ListGroupItem,\n  Input,\n  Row,\n  Col,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartExample1,\n  chartExample2,\n  chartExample3,\n  chartExample4,\n} from \"variables/charts.js\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"data1\",\n    };\n  }\n  componentDidMount() {}\n  setBgChartData = (name) => {\n    this.setState({\n      bigChartData: name,\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Stats />\n          <Graph data={this.props.data} />\n\n          <Table data={this.props.data} />\n\n          <Row>\n            <Col xs=\"12\">\n              {/* <Card className=\"card-chart\">\n                <CardHeader>\n                  <Row>\n                    <Col className=\"text-left\" sm=\"6\">\n                      <h5 className=\"card-category\">Total Shipments</h5>\n                      <CardTitle tag=\"h2\">Performance</CardTitle>\n                    </Col>\n                    <Col sm=\"6\"></Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Line\n                      data={chartExample1.data}\n                      options={chartExample1.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card> */}\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react plugin used to create google maps\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\n\nconst MapWrapper = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={13}\n      defaultCenter={{ lat: 40.748817, lng: -73.985428 }}\n      defaultOptions={{\n        scrollwheel: false, //we disable de scroll over the map, it is a really annoing when you scroll through page\n        styles: [\n          {\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#1d2c4d\"\n              }\n            ]\n          },\n          {\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#8ec3b9\"\n              }\n            ]\n          },\n          {\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#1a3646\"\n              }\n            ]\n          },\n          {\n            featureType: \"administrative.country\",\n            elementType: \"geometry.stroke\",\n            stylers: [\n              {\n                color: \"#4b6878\"\n              }\n            ]\n          },\n          {\n            featureType: \"administrative.land_parcel\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#64779e\"\n              }\n            ]\n          },\n          {\n            featureType: \"administrative.province\",\n            elementType: \"geometry.stroke\",\n            stylers: [\n              {\n                color: \"#4b6878\"\n              }\n            ]\n          },\n          {\n            featureType: \"landscape.man_made\",\n            elementType: \"geometry.stroke\",\n            stylers: [\n              {\n                color: \"#334e87\"\n              }\n            ]\n          },\n          {\n            featureType: \"landscape.natural\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#023e58\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#283d6a\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#6f9ba5\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#1d2c4d\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi.park\",\n            elementType: \"geometry.fill\",\n            stylers: [\n              {\n                color: \"#023e58\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi.park\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#3C7680\"\n              }\n            ]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#304a7d\"\n              }\n            ]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#98a5be\"\n              }\n            ]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#1d2c4d\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#2c6675\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"geometry.fill\",\n            stylers: [\n              {\n                color: \"#9d2a80\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"geometry.stroke\",\n            stylers: [\n              {\n                color: \"#9d2a80\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#b0d5ce\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#023e58\"\n              }\n            ]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#98a5be\"\n              }\n            ]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#1d2c4d\"\n              }\n            ]\n          },\n          {\n            featureType: \"transit.line\",\n            elementType: \"geometry.fill\",\n            stylers: [\n              {\n                color: \"#283d6a\"\n              }\n            ]\n          },\n          {\n            featureType: \"transit.station\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#3a4762\"\n              }\n            ]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#0e1626\"\n              }\n            ]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#4e6d70\"\n              }\n            ]\n          }\n        ]\n      }}\n    >\n      <Marker position={{ lat: 40.748817, lng: -73.985428 }} />\n    </GoogleMap>\n  ))\n);\n\nclass Map extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card className=\"card-plain\">\n                <CardHeader>Google Maps</CardHeader>\n                <CardBody>\n                  <div\n                    id=\"map\"\n                    className=\"map\"\n                    style={{ position: \"relative\", overflow: \"hidden\" }}\n                  >\n                    <MapWrapper\n                      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE\"\n                      loadingElement={<div style={{ height: `100%` }} />}\n                      containerElement={<div style={{ height: `100%` }} />}\n                      mapElement={<div style={{ height: `100%` }} />}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Map;\n","import web3 from \"./web3\";\nconst CampaignFactory = require(\"./build/contracts.json\");\n\nconst abi = CampaignFactory[\"covidextricate.sol\"].CovidExtricate.abi;\n\nconst instance = new web3.eth.Contract(\n  abi,\n  \"0x1A81559d69B63E0E17bd037932998663Cd759027\"\n);\n\nexport default instance;\n","import web3 from \"./web3\";\nconst CampaignFactory = require(\"./build/contracts.json\");\n\nconst abi = CampaignFactory[\"donationcamp.sol\"].DonationCamp.abi;\nconst instance = (address) => new web3.eth.Contract(abi, address);\n\nexport default instance;\n","import React, { useEffect, useState } from \"react\";\nimport camp from \"../ethereum/camp\";\nimport { Button, Input } from \"reactstrap\";\nimport web3 from \"../ethereum/web3\";\nconst Tr = (props) => {\n  const [money, update] = useState(0);\n  const [value, updateValue] = useState({\n    instance: \"\",\n    value: \"\",\n    name: \"\",\n    description: \"\",\n    link: \"\",\n    address: [],\n  });\n  useEffect(async () => {\n    const instance = camp(props.address);\n    const values = await instance.methods.getValues().call();\n    updateValue({\n      instance,\n      name: values[1],\n      description: values[2],\n      link: values[3],\n      value: values[0],\n      address: values[4],\n    });\n  }, []);\n  return (\n    <tr>\n      <td>{value.name}</td>\n      <td>{value.description}</td>\n      <td>{value.link}</td>\n\n      <td>\n        <input\n          value={money}\n          onChange={(e) => {\n            update(e.target.value);\n          }}\n        />\n      </td>\n      <td>\n        <Button\n          onClick={async () => {\n            const accounts = await web3.eth.getAccounts();\n            await value.instance.methods.contribute().send({\n              from: accounts[0],\n              value: web3.utils.toWei(money, \"ether\"),\n            });\n          }}\n        >\n          Donate\n        </Button>\n        <Button\n          onClick={async () => {\n            const accounts = await web3.eth.getAccounts();\n            await value.instance.methods\n              .transferFund()\n              .send({ from: accounts[0] });\n          }}\n        >\n          Collect\n        </Button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Tr;\n","import React, { useState, useContext } from \"react\";\nimport parent from \"../ethereum/parent\";\nimport web3 from \"../ethereum/web3\";\n\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst Details = (props) => {\n  const [value, update] = useState({\n    Amount: 0,\n    Name: \"\",\n    Description: \"\",\n    Links: \"\",\n  });\n\n  const onSubmit = async () => {\n    const accounts = await web3.eth.getAccounts();\n    const { Amount, Name, Description, Links } = value;\n    const result = await parent.methods\n      .CreateCamp(Amount, Name, Description, Links)\n      .send({ from: accounts[0] });\n    console.log(result);\n  };\n\n  return (\n    <>\n      <Col md=\"12\">\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Create A Camp</h5>\n          </CardHeader>\n          <CardBody>\n            <Form>\n              <Row>\n                <Col className=\"px-md-4\" md=\"3\">\n                  <FormGroup>\n                    <label>Amount Needed</label>\n                    <Input\n                      value={value.Amount}\n                      placeholder=\"Amount\"\n                      type=\"number\"\n                      onChange={(e) =>\n                        update({\n                          Name: value.Name,\n                          Description: value.Description,\n                          Links: value.Links,\n                          Amount: e.target.value,\n                        })\n                      }\n                    />\n                  </FormGroup>\n                </Col>\n                <Col className=\"pr-md-4\" md=\"5\">\n                  <FormGroup>\n                    <label>Name of the Individual or Institution</label>\n                    <Input\n                      value={value.Name}\n                      placeholder=\"Name\"\n                      type=\"text\"\n                      onChange={(e) =>\n                        update({\n                          Amount: value.Amount,\n                          Description: value.Description,\n                          Links: value.Links,\n                          Name: e.target.value,\n                        })\n                      }\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"12\">\n                  <FormGroup>\n                    <label>Description</label>\n                    <Input\n                      cols=\"80\"\n                      placeholder=\"Here can be your description\"\n                      rows=\"4\"\n                      type=\"textarea\"\n                      value={value.Description}\n                      onChange={(e) =>\n                        update({\n                          Amount: value.Amount,\n                          Description: e.target.value,\n                          Links: value.Links,\n                          Name: value.Name,\n                        })\n                      }\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Col className=\"pl-md-4\" md=\"4\">\n                <FormGroup>\n                  <label htmlFor=\"exampleInputEmail1\">Links</label>\n                  <Input\n                    placeholder=\"Links\"\n                    value={value.Links}\n                    onChange={(e) =>\n                      update({\n                        Amount: value.Amount,\n                        Description: value.Description,\n                        Links: e.target.value,\n                        Name: value.Name,\n                      })\n                    }\n                  />\n                </FormGroup>\n              </Col>\n            </Form>\n          </CardBody>\n          <CardFooter>\n            <Button\n              className=\"btn-fill\"\n              color=\"primary\"\n              type=\"submit\"\n              onClick={onSubmit}\n            >\n              Save\n            </Button>\n          </CardFooter>\n        </Card>\n      </Col>\n    </>\n  );\n};\n\nexport default Details;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react plugin for creating notifications over the dashboard\nimport NotificationAlert from \"react-notification-alert\";\nimport camps from \"../ethereum/parent\";\nimport Tr from \"./ts\";\nimport Details from \"./details\";\nimport {\n  Alert,\n  UncontrolledAlert,\n  Button,\n  Card,\n  Table,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nclass Notifications extends React.Component {\n  state = { accounts: [] };\n  notify = (place) => {\n    var color = Math.floor(Math.random() * 5 + 1);\n    var type;\n\n    var options = {};\n    options = {\n      place: place,\n      message: (\n        <div>\n          <div>\n            Welcome to <b>Black Dashboard React</b> - a beautiful freebie for\n            every web developer.\n          </div>\n        </div>\n      ),\n      type: type,\n      icon: \"tim-icons icon-bell-55\",\n      autoDismiss: 7,\n    };\n    this.refs.notificationAlert.notificationAlert(options);\n  };\n\n  async componentDidMount() {\n    const accounts = await camps.methods.getDeployedCamps().call();\n    this.setState({ accounts });\n  }\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Card>\n            <CardHeader>\n              <CardTitle tag=\"h4\">Donation Camps</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <Table className=\"tablesorter\" responsive>\n                <thead className=\"text-primary\">\n                  <tr>\n                    <th>Camp</th>\n                    <th>Description</th>\n                    <th>Link</th>\n                    <th className=\"text-center\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.accounts.map((value, index) => {\n                    return <Tr address={value} key={index} />;\n                  })}\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Details />\n\n          {/* \n          <div className=\"react-notification-alert-container\">\n            <NotificationAlert ref=\"notificationAlert\" />\n          </div>\n          <Row>\n            <Col md=\"6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Notifications Style</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Alert color=\"info\">\n                    <span>This is a plain notification</span>\n                  </Alert>\n                  <UncontrolledAlert color=\"info\">\n                    <span>This is a notification with close button.</span>\n                  </UncontrolledAlert>\n                  <UncontrolledAlert className=\"alert-with-icon\" color=\"info\">\n                    <span\n                      className=\"tim-icons icon-bell-55\"\n                      data-notify=\"icon\"\n                    />\n                    <span data-notify=\"message\">\n                      This is a notification with close button and icon.\n                    </span>\n                  </UncontrolledAlert>\n                  <UncontrolledAlert className=\"alert-with-icon\" color=\"info\">\n                    <span\n                      className=\"tim-icons icon-bell-55\"\n                      data-notify=\"icon\"\n                    />\n                    <span data-notify=\"message\">\n                      This is a notification with close button and icon and have\n                      many lines. You can see that the icon and the close button\n                      are always vertically aligned. This is a beautiful\n                      notification. So you don't have to worry about the style.\n                    </span>\n                  </UncontrolledAlert>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col md=\"6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Notification states</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <UncontrolledAlert color=\"primary\">\n                    <span>\n                      <b>Primary - </b>\n                      This is a regular notification made with \".alert-primary\"\n                    </span>\n                  </UncontrolledAlert>\n                  <UncontrolledAlert color=\"info\">\n                    <span>\n                      <b>Info - </b>\n                      This is a regular notification made with \".alert-info\"\n                    </span>\n                  </UncontrolledAlert>\n                  <UncontrolledAlert color=\"success\">\n                    <span>\n                      <b>Success - </b>\n                      This is a regular notification made with \".alert-success\"\n                    </span>\n                  </UncontrolledAlert>\n                  <UncontrolledAlert color=\"warning\">\n                    <span>\n                      <b>Warning - </b>\n                      This is a regular notification made with \".alert-warning\"\n                    </span>\n                  </UncontrolledAlert>\n                  <UncontrolledAlert color=\"danger\">\n                    <span>\n                      <b>Danger - </b>\n                      This is a regular notification made with \".alert-danger\"\n                    </span>\n                  </UncontrolledAlert>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col md=\"12\">\n              <Card>\n                <CardBody>\n                  <div className=\"places-buttons\">\n                    <Row>\n                      <Col className=\"ml-auto mr-auto text-center\" md=\"6\">\n                        <CardTitle tag=\"h4\">\n                          Notifications Places\n                          <p className=\"category\">\n                            Click to view notifications\n                          </p>\n                        </CardTitle>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"ml-auto mr-auto\" lg=\"8\">\n                        <Row>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"tl\")}\n                            >\n                              Top Left\n                            </Button>\n                          </Col>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"tc\")}\n                            >\n                              Top Center\n                            </Button>\n                          </Col>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"tr\")}\n                            >\n                              Top Right\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"ml-auto mr-auto\" lg=\"8\">\n                        <Row>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"bl\")}\n                            >\n                              Bottom Left\n                            </Button>\n                          </Col>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"bc\")}\n                            >\n                              Bottom Center\n                            </Button>\n                          </Col>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"br\")}\n                            >\n                              Bottom Right\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row> */}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Notifications;\n","import NotificationCopy from \"./Notifications copy\";\nimport React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\n\nclass Notification extends Component {\n  state = { isMetaMask: false, accounts: [], installMetamask: false };\n\n  render() {\n    console.log(this.state);\n    return (\n      <React.Fragment>\n        {!this.state.isMetaMask && (\n          <div className=\"content\">\n            >\n            <Button\n              onClick={async () => {\n                if (\n                  typeof window.web3 !== \"undefined\" &&\n                  window.web3.currentProvider.isMetaMask\n                ) {\n                  const accounts = await window.ethereum.enable();\n                  this.setState({ isMetaMask: true, accounts });\n                } else {\n                  this.setState({ installMetamask: true });\n                }\n              }}\n            >\n              Login With Metamask\n            </Button>\n            {this.state.installMetamask && (\n              <a href=\"https://metamask.io/download.html\" target=\"_blank\">\n                <Button>Install Metamask</Button>\n              </a>\n            )}\n          </div>\n        )}\n        {this.state.isMetaMask && (\n          <NotificationCopy accounts={this.state.accounts} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Notification;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Tables extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Simple Table</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"tablesorter\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>Name</th>\n                        <th>Country</th>\n                        <th>City</th>\n                        <th className=\"text-center\">Salary</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Dakota Rice</td>\n                        <td>Niger</td>\n                        <td>Oud-Turnhout</td>\n                        <td className=\"text-center\">$36,738</td>\n                      </tr>\n                      <tr>\n                        <td>Minerva Hooper</td>\n                        <td>Curaçao</td>\n                        <td>Sinaai-Waas</td>\n                        <td className=\"text-center\">$23,789</td>\n                      </tr>\n                      <tr>\n                        <td>Sage Rodriguez</td>\n                        <td>Netherlands</td>\n                        <td>Baileux</td>\n                        <td className=\"text-center\">$56,142</td>\n                      </tr>\n                      <tr>\n                        <td>Philip Chaney</td>\n                        <td>Korea, South</td>\n                        <td>Overland Park</td>\n                        <td className=\"text-center\">$38,735</td>\n                      </tr>\n                      <tr>\n                        <td>Doris Greene</td>\n                        <td>Malawi</td>\n                        <td>Feldkirchen in Kärnten</td>\n                        <td className=\"text-center\">$63,542</td>\n                      </tr>\n                      <tr>\n                        <td>Mason Porter</td>\n                        <td>Chile</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-center\">$78,615</td>\n                      </tr>\n                      <tr>\n                        <td>Jon Porter</td>\n                        <td>Portugal</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-center\">$98,615</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col md=\"12\">\n              <Card className=\"card-plain\">\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Table on Plain Background</CardTitle>\n                  <p className=\"category\">Here is a subtitle for this table</p>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"tablesorter\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>Name</th>\n                        <th>Country</th>\n                        <th>City</th>\n                        <th className=\"text-center\">Salary</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Dakota Rice</td>\n                        <td>Niger</td>\n                        <td>Oud-Turnhout</td>\n                        <td className=\"text-center\">$36,738</td>\n                      </tr>\n                      <tr>\n                        <td>Minerva Hooper</td>\n                        <td>Curaçao</td>\n                        <td>Sinaai-Waas</td>\n                        <td className=\"text-center\">$23,789</td>\n                      </tr>\n                      <tr>\n                        <td>Sage Rodriguez</td>\n                        <td>Netherlands</td>\n                        <td>Baileux</td>\n                        <td className=\"text-center\">$56,142</td>\n                      </tr>\n                      <tr>\n                        <td>Philip Chaney</td>\n                        <td>Korea, South</td>\n                        <td>Overland Park</td>\n                        <td className=\"text-center\">$38,735</td>\n                      </tr>\n                      <tr>\n                        <td>Doris Greene</td>\n                        <td>Malawi</td>\n                        <td>Feldkirchen in Kärnten</td>\n                        <td className=\"text-center\">$63,542</td>\n                      </tr>\n                      <tr>\n                        <td>Mason Porter</td>\n                        <td>Chile</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-center\">$78,615</td>\n                      </tr>\n                      <tr>\n                        <td>Jon Porter</td>\n                        <td>Portugal</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-center\">$98,615</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Tables;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport chartData from \"../variables/charData1.js\";\n\nconst Graph = (props) => {\n  var arr1 = [];\n  var arr2 = [];\n  let recorddata = \"\";\n  props.data.forEach((value, index) => {\n    const date = value.record_date.substr(0, 10);\n    if (date != recorddata) {\n      arr1.push(date);\n      const str = value.total_cases.replace(\",\", \"\");\n      arr2.push(parseInt(str));\n      recorddata = date;\n    }\n  });\n  const ChartData = chartData(\n    arr1.slice(0, 20).reverse(),\n    arr2.slice(0, 20).reverse()\n  );\n  return (\n    <Card className=\"card-chart\">\n      <CardHeader>\n        <h5 className=\"card-category\"></h5>\n        <CardTitle tag=\"h3\">\n          <i className=\"tim-icons icon-delivery-fast text-primary\" />\n          Total Cases (Graphical Representation)\n        </CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className=\"chart-area\">\n          <Line data={ChartData.data} options={ChartData.options} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Graph;\n","import React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Graph from \"../components/graphLine\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst GETLIST = gql`\n  query apiaccess($inputString: String) {\n    rapidapi {\n      historyCountry(input: $inputString) {\n        country_name\n        total_cases\n        active_cases\n        new_cases\n        total_deaths\n        new_deaths\n        total_recovered\n        total_cases_per1m\n        record_date\n      }\n    }\n  }\n`;\nconst Timeline = (props) => {\n  const query = useQuery(GETLIST, {\n    variables: { inputString: props.country },\n  });\n  if (query.loading) return <div className=\"content\">Loading...</div>;\n  let data = \"\";\n  if (query.data.rapidapi.historyCountry) {\n    var array = query.data.rapidapi.historyCountry\n      .reverse()\n      .filter((element) => {\n        if (element.record_date.substr(0, 10) !== data) {\n          data = element.record_date.substr(0, 10);\n          return element;\n        }\n      });\n  } else array = [];\n  return (\n    <>\n      <div className=\"content\">\n        <Graph data={array} />\n        <Row>\n          <Col md=\"12\">\n            <Card className=\"card-tasks\">\n              <CardHeader>\n                <CardTitle tag=\"h4\">Timeline</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"table-full-width table-responsive\">\n                  <Table className=\"tablesorter\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        {/* <th>Name</th> */}\n                        <th>Total Cases</th>\n                        <th>Active Cases</th>\n                        <th>New Cases</th>\n                        <th>Total Deaths</th>\n                        <th>New Deaths</th>\n                        <th>Total Recovered</th>\n                        <th>Cases Per 1M</th>\n                        <th>Date</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {array.map((value, element) => {\n                        return (\n                          <tr>\n                            {/* <th>{value.country_name}</th> */}\n                            <th>{value.total_cases}</th>\n                            <th>{value.active_cases}</th>\n                            <th>{value.new_cases}</th>\n                            <th>{value.total_deaths}</th>\n                            <th>{value.new_deaths}</th>\n                            <th>{value.total_recovered}</th>\n                            <th>{value.total_cases_per1m}</th>\n                            <th>{value.record_date}</th>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nexport default Timeline;\n","import React, { Component, useState } from \"react\";\nimport Table from \"./timeline\";\nimport { InputGroup, Button, Input } from \"reactstrap\";\n\nfunction TypographyContainer() {\n  const [values, update] = useState({ values: \"\", state: false });\n\n  return (\n    <>\n      <div className=\"content\">\n        <InputGroup>\n          <Input\n            placeholder=\"Country Name\"\n            value={values.values}\n            onChange={(e) => {\n              update({ values: e.target.value, state: false });\n            }}\n          />\n        </InputGroup>\n        <br />\n        <Button onClick={() => update({ values: values.values, state: true })}>\n          Search\n        </Button>\n        {values.state && <Table country={values.values} />}\n      </div>\n    </>\n  );\n}\n\nexport default TypographyContainer;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass UserProfile extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Edit Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"5\">\n                        <FormGroup>\n                          <label>Company (disabled)</label>\n                          <Input\n                            defaultValue=\"Creative Code Inc.\"\n                            disabled\n                            placeholder=\"Company\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"px-md-1\" md=\"3\">\n                        <FormGroup>\n                          <label>Username</label>\n                          <Input\n                            defaultValue=\"michael23\"\n                            placeholder=\"Username\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"4\">\n                        <FormGroup>\n                          <label htmlFor=\"exampleInputEmail1\">\n                            Email address\n                          </label>\n                          <Input placeholder=\"mike@email.com\" type=\"email\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label>First Name</label>\n                          <Input\n                            defaultValue=\"Mike\"\n                            placeholder=\"Company\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label>Last Name</label>\n                          <Input\n                            defaultValue=\"Andrew\"\n                            placeholder=\"Last Name\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"12\">\n                        <FormGroup>\n                          <label>Address</label>\n                          <Input\n                            defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                            placeholder=\"Home Address\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"4\">\n                        <FormGroup>\n                          <label>City</label>\n                          <Input\n                            defaultValue=\"Mike\"\n                            placeholder=\"City\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"px-md-1\" md=\"4\">\n                        <FormGroup>\n                          <label>Country</label>\n                          <Input\n                            defaultValue=\"Andrew\"\n                            placeholder=\"Country\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"4\">\n                        <FormGroup>\n                          <label>Postal Code</label>\n                          <Input placeholder=\"ZIP Code\" type=\"number\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"8\">\n                        <FormGroup>\n                          <label>About Me</label>\n                          <Input\n                            cols=\"80\"\n                            defaultValue=\"Lamborghini Mercy, Your chick she so thirsty, I'm in\n                            that two seat Lambo.\"\n                            placeholder=\"Here can be your description\"\n                            rows=\"4\"\n                            type=\"textarea\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n                <CardFooter>\n                  <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col md=\"4\">\n              <Card className=\"card-user\">\n                <CardBody>\n                  <CardText />\n                  <div className=\"author\">\n                    <div className=\"block block-one\" />\n                    <div className=\"block block-two\" />\n                    <div className=\"block block-three\" />\n                    <div className=\"block block-four\" />\n                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                      <img\n                        alt=\"...\"\n                        className=\"avatar\"\n                        src={require(\"assets/img/emilyz.jpg\")}\n                      />\n                      <h5 className=\"title\">Mike Andrew</h5>\n                    </a>\n                    <p className=\"description\">Ceo/Co-Founder</p>\n                  </div>\n                  <div className=\"card-description\">\n                    Do not be scared of the truth because we need to restart the\n                    human foundation in truth And I love you like Kanye loves\n                    Kanye I love Rick Owens’ bed design but the back is...\n                  </div>\n                </CardBody>\n                <CardFooter>\n                  <div className=\"button-container\">\n                    <Button className=\"btn-icon btn-round\" color=\"facebook\">\n                      <i className=\"fab fa-facebook\" />\n                    </Button>\n                    <Button className=\"btn-icon btn-round\" color=\"twitter\">\n                      <i className=\"fab fa-twitter\" />\n                    </Button>\n                    <Button className=\"btn-icon btn-round\" color=\"google\">\n                      <i className=\"fab fa-google-plus\" />\n                    </Button>\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProfile;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect, MemoryRouter } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/react-logo.png\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"blue\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1,\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n  getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n  getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            bgColor={this.state.backgroundColor}\n            logo={{\n              outterLink: \"https://www.creative-tim.com/\",\n              text: \"Corona Extricate\",\n              imgSrc: logo,\n            }}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <AdminNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n            />\n            <Switch>\n              {this.getRoutes(routes)}\n              <Redirect from=\"*\" to=\"/admin/dashboard\" />\n            </Switch>\n          </div>\n        </div>\n        <FixedPlugin\n          bgColor={this.state.backgroundColor}\n          handleBgClick={this.handleBgClick}\n        />\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.js\";\nimport Map from \"views/Map.js\";\nimport Notifications from \"views/Notifications.js\";\nimport TableList from \"views/TableList.js\";\nimport Typography from \"views/TypographyCopy.js\";\nimport UserProfile from \"views/UserProfile.js\";\nimport UploadImage from \"views/UploadImage\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Statistics\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n\n  // {\n  //   path: \"/map\",\n  //   name: \"Map\",\n  //   icon: \"tim-icons icon-pin\",\n  //   component: Map,\n  //   layout: \"/admin\",\n  // },\n\n  {\n    path: \"/typography\",\n    name: \"Timeline\",\n    icon: \"tim-icons icon-align-center\",\n    component: Typography,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/notifications\",\n    name: \"Donation\",\n    icon: \"tim-icons icon-bell-55\",\n    component: Notifications,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user-profile\",\n    name: \"Report Violation\",\n    icon: \"tim-icons icon-single-02\",\n    component: UploadImage,\n    layout: \"/admin\",\n  },\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport client from \"./graphQl.js\";\nimport AdminLayout from \"layouts/Admin/Admin.js\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <ApolloProvider client={client}>\n      <Switch>\n        <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n        <Redirect from=\"/\" to=\"/admin/dashboard\" />\n      </Switch>\n    </ApolloProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/react-logo.21285b10.png\";","import Web3 from \"web3\";\n\nlet web3;\n\nif (typeof window.web3 !== \"undefined\") {\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  const provider = new Web3.providers.HttpProvider(\n    \"https://rinkeby.infura.io/v3/3dc8b2e3489c4260904f45a4e74a56dc\"\n  );\n  web3 = new Web3(provider);\n}\n\nexport default web3;\n","import React, { Component } from \"react\";\nimport parent from \"../ethereum/covidCatchContract\";\nimport web3 from \"../ethereum/web3\";\nimport { StyledDropZone } from \"react-drop-zone\";\nimport FileIcon, { defaultStyles } from \"react-file-icon\";\nimport fileReaderPullStream from \"pull-file-reader\";\nimport ipfs from \"../ethereum/ipfs\";\nimport { Table } from \"reactstrap\";\nimport Moment from \"react-moment\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\n\nconst query = gql`\n  query idVerify($id: String!) {\n    idVerify(input: $id)\n  }\n`\nconst getHash = gql`\n  {\n    idVerify\n  }\n`\n\nclass UploadImage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accounts: null,\n      solidityDrive: [],\n      contract: null,\n      web3,\n      location: \"\",\n      ipfsHash: \"\",\n      buffer: null,\n      value: \"\",\n      submit: false,\n      isOwner: false\n    };\n  }\n\n  componentDidMount() {\n    web3.eth.getAccounts((err, accounts) => {\n      this.setState({ accounts: accounts });\n      console.log(\"ACCOUNTSSSS\", this.state.accounts);\n\n      this.setState({\n        contract: parent,\n        web3,\n      });\n\n      this.state.contract.methods\n        .owner()\n        .call({ from: accounts[0] })\n        .then(owner => {\n          console.log(owner, \"OWNER\")\n          if(owner === accounts[0])\n          {\n            this.setState({\n              isOwner: true\n            })\n          }\n          this.getFiles();\n        })\n    });\n  }\n\n  getFiles = async () => {\n    try {\n      const { accounts, contract } = this.state;\n      let filesLength = await contract.methods\n        .getReportsCount()\n        .call({ from: accounts[0] });\n      let files = [];\n      for (let i = 0; i < filesLength; i++) {\n        let file = await contract.methods\n          .reports(i)\n          .call({ from: accounts[0] });\n        files.push(file);\n      }\n      this.setState({ solidityDrive: files });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  captureFile = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    const file = event.target.files[0];\n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => this.convertToBuffer(reader);\n  };\n  convertToBuffer = async (reader) => {\n    //file is converted to a buffer for upload to IPFS\n    const buffer = await Buffer.from(reader.result);\n    //set this buffer -using es6 syntax\n    this.setState({ buffer });\n  };\n\n  // onDrop = async (file) => {\n  //   try {\n  //     const stream = fileReaderPullStream(file);\n  //     // const result = await ipfs.add(stream);\n  //     // console.log(result[0].hash)\n  //     await ipfs.add(stream, (err, ipfsHash) => {\n  //       console.log(err, ipfsHash);\n  //       this.setState({ ipfsHash: ipfsHash[0].hash });\n  //     });\n  //     //this.setState({ ipfsHash: result[0].hash });\n  //     // const timestamp = Math.round(+new Date() / 1000);\n  //     // const type = file.name.substr(file.name.lastIndexOf(\".\") + 1);\n  //   } catch (e) {\n  //     console.log(e);\n  //   }\n  // };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { accounts, contract, location, buffer } = this.state;\n\n    try {\n      await ipfs.add(buffer, (err, ipfsHash) => {\n        console.log(err, ipfsHash);\n        //setState by setting ipfsHash to ipfsHash[0].hash\n        this.setState({ ipfsHash: ipfsHash[0].hash });\n        let fileuploaded = contract.methods\n          .newReport(location, this.state.ipfsHash)\n          .send({ from: accounts[0], gas: 300000 });\n\n        console.log(fileuploaded);\n      });\n      //debugger;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  setField = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.setState({ submit: !this.state.submit });\n  };\n\n  takeAction = async (id) => {\n    const {contract, accounts} = this.state\n    await contract.methods\n          .setActionTaken(id)\n          .send({ from: accounts[0], gas: 300000 });\n  }\n\n  render() {\n    const { solidityDrive } = this.state;\n    return (\n      <div className=\"content\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h3>Submit New Act of Violation</h3>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"location\">Location Address</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"location\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter Location Address\"\n                  name=\"location\"\n                  onChange={this.setField}\n                  value={this.state.location}\n                />\n              </div>\n              <br/>\n              <input type=\"file\" onChange={this.captureFile} />\n              <div\n                style={{\n                  height: \"50px\",\n                  width: \"100%\",\n                }}\n              >\n                {/* <StyledDropZone onDrop={this.onDrop} /> */}\n              </div>{\" \"}\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n        <h3>Current Reports:</h3>\n        <Table className=\"tablesrter\" responsive>\n          <thead className=\"text-primary\">\n            <tr>\n              <th>Date</th>\n              <th>Location</th>\n              <th>Image Proof</th>\n              <th>Action Taken?</th>\n            </tr>\n          </thead>\n          <tbody>\n            {solidityDrive !== []\n              ? solidityDrive.map((item, key) => (\n                  <tr key={key}>\n                  <td className=\"text-left\">\n                      <Moment format=\"YYYY/MM/DD\" unix>\n                        {item.reportedAt}\n                      </Moment>\n                    </td>\n                    <td className=\"text-left\">\n                      {item.location}\n                    </td>\n                    <td className=\"text-left\">\n                      <a href={\"https://ipfs.io/ipfs/\" + item.proof_ipfs_hash}>\n                        VIEW PROOF\n                      </a>\n                    </td>\n                    <td>\n                      {this.state.isOwner && !item.actionTaken ? (<button onClick={() => this.takeAction(key)} className=\"btn\">Take Action</button>) : (item.actionTaken ? (\"Yes\") : (\"No\"))}\n                    </td>\n                  </tr>\n                ))\n              : null}\n          </tbody>\n        </Table>\n        \n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"location\">Register</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"location\"\n              aria-describedby=\"emailHelp\"\n              placeholder=\"Enter Aadhaar Number\"\n              name=\"location\"\n              onChange={(e) =>\n                this.setState({ submit: false, value: e.target.value })\n              }\n              value={this.state.value}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n\n        {this.state.submit && (\n          <Query query={query} variables={{ id: this.state.value }}>\n            {({ loading, error, data }) => {\n              if (loading) return \"Loading...\";\n              if (error) return `Error ${error.message}`;\n              return (\n                <>\n                  {\" \"}\n                  <h5>Your PassToken:</h5>\n                  <p>{data.idVerify}</p>\n                </>\n              );\n            }}\n          </Query>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default UploadImage;\n","import web3 from \"./web3\";\n\nconst abi = require(\"./build/covidCatchABI.json\");\nconst address = \"0xC191bA990Edb1fB52E9b3Bc1B97F38A2349e76d5\";\n\nconst instance = new web3.eth.Contract(\n  abi,\n  address\n);\n\nexport default instance;","// const ipfsApi = require('ipfs-api');\n// const ipfs = new ipfsApi('localhost', '5001', {protocol:'http'});\n\nconst IPFS = require('ipfs-api');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nexport default ipfs;","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n// ##############################\n// // // Chart variables\n// #############################\n\n// chartExample1 and chartExample2 options\nlet chart1_2_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  tooltips: {\n    backgroundColor: \"#f5f5f5\",\n    titleFontColor: \"#333\",\n    bodyFontColor: \"#666\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n  },\n  responsive: true,\n  scales: {\n    yAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          suggestedMin: 60,\n          suggestedMax: 125,\n          padding: 20,\n          fontColor: \"#9a9a9a\",\n        },\n      },\n    ],\n    xAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.1)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9a9a9a\",\n        },\n      },\n    ],\n  },\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample1 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\n        },\n      ],\n    };\n  },\n  options: chart1_2_options,\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample2 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 100, 70, 80, 120, 80],\n        },\n      ],\n    };\n  },\n  options: chart1_2_options,\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nconst chartExample4 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#00d6b4\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#00d6b4\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#00d6b4\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [90, 27, 60, 12, 80],\n        },\n      ],\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.0)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(0,242,195,0.1)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n    },\n  },\n};\n\nmodule.exports = {\n  chartExample1, // in src/views/Dashboard.js\n  chartExample2, // in src/views/Dashboard.js\n  chartExample4, // in src/views/Dashboard.js\n};\n"],"sourceRoot":""}
{"version":3,"sources":["assets/img/react-logo.png","assets/img/anime3.png","variables/charts.js","../node_modules/web3-eth-accounts/src sync","assets/img/emilyz.jpg","graphQl.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","components/FixedPlugin/FixedPlugin.js","components/Stats.js","variables/charData1.js","components/graph.js","components/table.js","views/Dashboard.js","views/Map.js","ethereum/web3.js","ethereum/parent.js","ethereum/camp.js","views/ts.js","views/details.js","views/Notifications copy.js","views/Notifications.js","views/TableList.js","components/graphLine.js","views/timeline.js","views/TypographyCopy.js","views/UserProfile.js","layouts/Admin/Admin.js","routes.js","index.js"],"names":["module","exports","chart1_2_options","maintainAspectRatio","legend","display","tooltips","backgroundColor","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","barPercentage","gridLines","drawBorder","color","zeroLineColor","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","chartExample1","data","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","options","chartExample2","chartExample4","webpackEmptyContext","req","e","Error","code","keys","resolve","id","cache","InMemoryCache","link","HttpLink","uri","client","ApolloClient","AdminNavbar","React","Component","constructor","props","super","updateColor","window","innerWidth","this","state","collapseOpen","setState","toggleCollapse","toggleModalSearch","modalSearch","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","type","onClick","toggleSidebar","NavbarBrand","href","preventDefault","brandText","aria-expanded","aria-label","data-target","data-toggle","Collapse","navbar","isOpen","Nav","InputGroup","Button","UncontrolledDropdown","nav","DropdownToggle","caret","alt","src","require","DropdownMenu","right","tag","NavLink","DropdownItem","divider","Modal","modalClassName","toggle","Input","placeholder","data-dismiss","Footer","ps","Sidebar","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","logo","rtlActive","logoImg","logoText","undefined","outterLink","target","imgSrc","text","to","innerLink","ref","map","prop","key","redirect","path","pro","layout","activeClassName","icon","name","defaultProps","FixedPlugin","handleClick","classes","activateMode","body","add","data-color","handleBgClick","GETLIST","gql","World","query","loading","error","message","rapidapi","world","total_recovered","total_deaths","total_cases","new_deaths","new_cases","statistic_taken_at","Col","md","Card","CardBody","Table","hover","scope","chartData","hoverBackgroundColor","Graph","useQuery","arr1","arr2","country","forEach","value","index","push","country_name","str","cases","replace","parseInt","ChartData","slice","CardHeader","CardTitle","TableComp","arr","lg","console","log","deaths","serious_critical","active_cases","Dashboard","setBgChartData","bigChartData","Stats","Row","xs","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","styles","elementType","stylers","featureType","Map","web3","Web3","currentProvider","provider","providers","HttpProvider","abi","CovidExtricate","instance","eth","Contract","DonationCamp","address","Tr","useState","money","update","description","updateValue","useEffect","a","camp","methods","getValues","call","values","onChange","getAccounts","accounts","contribute","send","from","utils","toWei","transferFund","Details","Amount","Name","Description","Links","onSubmit","parent","CreateCamp","result","Form","FormGroup","cols","rows","htmlFor","CardFooter","Notifications","notify","place","Math","floor","random","autoDismiss","notificationAlert","camps","getDeployedCamps","Notification","isMetaMask","installMetamask","Fragment","ethereum","enable","recorddata","date","record_date","substr","Timeline","variables","inputString","historyCountry","array","reverse","element","total_cases_per1m","TypographyContainer","UserProfile","component","Typography","Admin","getRoutes","getBrandText","i","length","mainPanel","tables","querySelectorAll","componentDidUpdate","history","action","scrollTop","scrollingElement","hist","createBrowserHistory","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4738e143.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.21285b10.png\";","module.exports = __webpack_public_path__ + \"static/media/anime3.bd6820f1.png\";","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n// ##############################\n// // // Chart variables\n// #############################\n\n// chartExample1 and chartExample2 options\nlet chart1_2_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  tooltips: {\n    backgroundColor: \"#f5f5f5\",\n    titleFontColor: \"#333\",\n    bodyFontColor: \"#666\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n  },\n  responsive: true,\n  scales: {\n    yAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          suggestedMin: 60,\n          suggestedMax: 125,\n          padding: 20,\n          fontColor: \"#9a9a9a\",\n        },\n      },\n    ],\n    xAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.1)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9a9a9a\",\n        },\n      },\n    ],\n  },\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample1 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\n        },\n      ],\n    };\n  },\n  options: chart1_2_options,\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample2 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 100, 70, 80, 120, 80],\n        },\n      ],\n    };\n  },\n  options: chart1_2_options,\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nconst chartExample4 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#00d6b4\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#00d6b4\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#00d6b4\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [90, 27, 60, 12, 80],\n        },\n      ],\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.0)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(0,242,195,0.1)\",\n            zeroLineColor: \"transparent\",\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\",\n          },\n        },\n      ],\n    },\n  },\n};\n\nmodule.exports = {\n  chartExample1, // in src/views/Dashboard.js\n  chartExample2, // in src/views/Dashboard.js\n  chartExample4, // in src/views/Dashboard.js\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 737;","module.exports = __webpack_public_path__ + \"static/media/emilyz.9fcf69e5.jpg\";","import ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: \"https://covidextricate.herokuapp.com/api\",\n});\n\nconst client = new ApolloClient({\n  cache,\n  link,\n});\nexport default client;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\",\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\",\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\",\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\",\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen,\n    });\n  };\n  // this function is to open the Search modal\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch,\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened,\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                {this.props.brandText}\n              </NavbarBrand>\n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n                <InputGroup className=\"search-bar\">\n                  <Button\n                    color=\"link\"\n                    data-target=\"#searchModal\"\n                    data-toggle=\"modal\"\n                    id=\"search-button\"\n                    onClick={this.toggleModalSearch}\n                  >\n                    <i className=\"tim-icons icon-zoom-split\" />\n                    <span className=\"d-lg-none d-md-block\">Search</span>\n                  </Button>\n                </InputGroup>\n\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Log out</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                    </NavLink>\n                    <DropdownItem divider tag=\"li\" />\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Log out</DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        <Modal\n          modalClassName=\"modal-search\"\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\n// reactstrap components\nimport { Container, Row, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return <footer className=\"footer\"></footer>;\n  }\n}\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  render() {\n    const { bgColor, routes, rtlActive, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </Link>\n        );\n        logoText = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </Link>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav>\n            {routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.props.toggleSidebar}\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\n\n// reactstrap components\nimport { Button } from \"reactstrap\";\n\nclass FixedPlugin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classes: \"dropdown show-dropdown\",\n    };\n  }\n  handleClick = () => {\n    if (this.state.classes === \"dropdown show-dropdown\") {\n      this.setState({ classes: \"dropdown show-dropdown show\" });\n    } else {\n      this.setState({ classes: \"dropdown show-dropdown\" });\n    }\n  };\n  activateMode = (mode) => {\n    switch (mode) {\n      case \"light\":\n        document.body.classList.add(\"white-content\");\n        break;\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  };\n  render() {\n    return (\n      <div className=\"fixed-plugin\">\n        <div className={this.state.classes}>\n          <div onClick={this.handleClick}>\n            <i className=\"fa fa-cog fa-2x\" />\n          </div>\n          <ul className=\"dropdown-menu show\">\n            <li className=\"header-title\">SIDEBAR BACKGROUND</li>\n            <li className=\"adjustments-line\">\n              <div className=\"badge-colors text-center\">\n                <span\n                  className={\n                    this.props.bgColor === \"primary\"\n                      ? \"badge filter badge-primary active\"\n                      : \"badge filter badge-primary\"\n                  }\n                  data-color=\"primary\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"primary\");\n                  }}\n                />{\" \"}\n                <span\n                  className={\n                    this.props.bgColor === \"blue\"\n                      ? \"badge filter badge-info active\"\n                      : \"badge filter badge-info\"\n                  }\n                  data-color=\"blue\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"blue\");\n                  }}\n                />{\" \"}\n                <span\n                  className={\n                    this.props.bgColor === \"green\"\n                      ? \"badge filter badge-success active\"\n                      : \"badge filter badge-success\"\n                  }\n                  data-color=\"green\"\n                  onClick={() => {\n                    this.props.handleBgClick(\"green\");\n                  }}\n                />{\" \"}\n              </div>\n            </li>\n            <li className=\"adjustments-line text-center color-change\">\n              <span className=\"color-label\">LIGHT MODE</span>{\" \"}\n              <span\n                className=\"badge light-badge mr-2\"\n                onClick={() => this.activateMode(\"light\")}\n              />{\" \"}\n              <span\n                className=\"badge dark-badge ml-2\"\n                onClick={() => this.activateMode(\"dark\")}\n              />{\" \"}\n              <span className=\"color-label\">DARK MODE</span>{\" \"}\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FixedPlugin;\n","import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { Query } from \"react-apollo\";\nimport { Col, Card, CardBody, Table } from \"reactstrap\";\n\nconst GETLIST = gql`\n  {\n    rapidapi {\n      world {\n        total_cases\n        total_deaths\n        total_recovered\n        new_cases\n        new_deaths\n        statistic_taken_at\n      }\n    }\n  }\n`;\n\nconst World = () => (\n  <Query query={GETLIST}>\n    {({ loading, error, data }) => {\n      if (loading) return \"Loading...\";\n      if (error) return `Error ${error.message}`;\n      const {\n        total_recovered,\n        total_deaths,\n        total_cases,\n        new_deaths,\n        new_cases,\n        statistic_taken_at,\n      } = data.rapidapi.world;\n\n      return (\n        <Col md=\"12\">\n          <Card>\n            <CardBody>\n              <Table hover>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Total Cases</td>\n                    <td>{total_cases}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Total Deaths</td>\n                    <td>{total_deaths}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Total Recovered</td>\n                    <td>{total_recovered}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">4</th>\n                    <td>New Cases (since :{statistic_taken_at})</td>\n                    <td>{new_cases}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">5</th>\n                    <td>New Death (since :{statistic_taken_at})</td>\n                    <td>{new_deaths}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      );\n    }}\n  </Query>\n);\n\nexport default World;\n","// const response = fetch(\"http://localhost:4000/api\", {\n//   method: \"POST\",\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     Accept: \"application/json\",\n//   },\n//   body: JSON.stringify({\n//     query: `query rapid($input:String){\n//         rapidapi(input:$input){\n//         country{\n//           country_name\n//           cases\n//           deaths\n//         }\n//         }\n//         }`,\n//   }),\n// })\n//   .then((r) => r.json())\n//   .then((data) => console.log(\"data returned:\", data));\n\nconst chartData = (labels, data) => {\n  return {\n    data: (canvas) => {\n      let ctx = canvas.getContext(\"2d\");\n\n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n      gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n      gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n      gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n      return {\n        labels: labels,\n        datasets: [\n          {\n            label: \"Countries\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            hoverBackgroundColor: gradientStroke,\n            borderColor: \"#d048b6\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            data: data,\n          },\n        ],\n      };\n    },\n    options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        backgroundColor: \"#f5f5f5\",\n        titleFontColor: \"#333\",\n        bodyFontColor: \"#666\",\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\",\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(225,78,202,0.1)\",\n              zeroLineColor: \"transparent\",\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9e9e9e\",\n            },\n          },\n        ],\n        xAxes: [\n          {\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(225,78,202,0.1)\",\n              zeroLineColor: \"transparent\",\n            },\n            ticks: {\n              fontColor: \"#9e9e9e\",\n            },\n          },\n        ],\n      },\n    },\n  };\n};\n\nexport default chartData;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport chartData from \"../variables/charData1.js\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst GETLIST = gql`\n  {\n    rapidapi {\n      country {\n        country_name\n        cases\n        deaths\n      }\n    }\n  }\n`;\nconst Graph = () => {\n  const data = useQuery(GETLIST);\n\n  if (data.loading) return <p>Loading...</p>;\n  if (data.error) return <p>ERROR</p>;\n  var arr1 = [];\n  var arr2 = [];\n  data.data.rapidapi.country.forEach((value, index) => {\n    arr1.push(value.country_name);\n    const str = value.cases.replace(\",\", \"\");\n    arr2.push(parseInt(str));\n  });\n  const ChartData = chartData(arr1.slice(0, 20), arr2.slice(0, 20));\n  return (\n    <Card className=\"card-chart\">\n      <CardHeader>\n        <h5 className=\"card-category\"></h5>\n        <CardTitle tag=\"h3\">\n          <i className=\"tim-icons icon-delivery-fast text-primary\" />\n          World Statistics\n        </CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className=\"chart-area\">\n          <Bar data={ChartData.data} options={ChartData.options} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Graph;\n","import React, { PureComponent } from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle, Col, Table } from \"reactstrap\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst GETLIST = gql`\n  {\n    rapidapi {\n      country {\n        country_name\n        cases\n        deaths\n        total_recovered\n        new_deaths\n        new_cases\n        serious_critical\n        active_cases\n        total_cases_per_1m_population\n      }\n    }\n  }\n`;\n\nconst TableComp = (props) => {\n  const data = useQuery(GETLIST);\n\n  if (data.loading) return <p>Loading...</p>;\n  if (data.error) return <p>ERROR</p>;\n\n  const arr = data.data.rapidapi.country;\n  return (\n    <Card>\n      <Col lg=\"12\" md=\"12\">\n        <Card className=\"card-tasks\">\n          <CardHeader>\n            <CardTitle tag=\"h4\">Country Wise Statistics</CardTitle>\n          </CardHeader>\n          <CardBody>\n            <div className=\"table-full-width table-responsive\">\n              <Table className=\"tablesorter\" responsive>\n                <thead className=\"text-primary\">\n                  <tr>\n                    <th>Country</th>\n                    <th>Deaths</th>\n                    <th>Total Recovered</th>\n                    <th className=\"text-center\">New Deaths</th>\n                    <th className=\"text-center\">New Cases</th>\n                    <th className=\"text-center\">Serious/Critical</th>\n                    <th className=\"text-center\">Active Cases</th>\n                    <th className=\"text-center\">\n                      Total Cases per 1M population\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {arr.map((value, index) => {\n                    console.log(value.country_name);\n                    return (\n                      <tr>\n                        <td>{value.country_name}</td>\n                        <td>{value.cases}</td>\n                        <td>{value.deaths}</td>\n                        <td className=\"text-center\">{value.total_recovered}</td>\n                        <td className=\"text-center\">{value.new_deaths}</td>\n                        <td className=\"text-center\">{value.new_cases}</td>\n                        <td className=\"text-center\">\n                          {value.serious_critical}\n                        </td>\n                        <td className=\"text-center\">{value.active_cases}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </div>\n          </CardBody>\n        </Card>\n      </Col>\n    </Card>\n  );\n};\n\nexport default TableComp;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport Stats from \"../components/Stats\";\nimport Graph from \"../components/graph\";\nimport Table from \"../components/table\";\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Label,\n  FormGroup,\n  ListGroup,\n  ListGroupItem,\n  Input,\n  Row,\n  Col,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartExample1,\n  chartExample2,\n  chartExample3,\n  chartExample4,\n} from \"variables/charts.js\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"data1\",\n    };\n  }\n  componentDidMount() {}\n  setBgChartData = (name) => {\n    this.setState({\n      bigChartData: name,\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Stats />\n          <Graph data={this.props.data} />\n\n          <Table data={this.props.data} />\n\n          <Row>\n            <Col xs=\"12\">\n              {/* <Card className=\"card-chart\">\n                <CardHeader>\n                  <Row>\n                    <Col className=\"text-left\" sm=\"6\">\n                      <h5 className=\"card-category\">Total Shipments</h5>\n                      <CardTitle tag=\"h2\">Performance</CardTitle>\n                    </Col>\n                    <Col sm=\"6\"></Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Line\n                      data={chartExample1.data}\n                      options={chartExample1.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card> */}\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react plugin used to create google maps\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\n\nconst MapWrapper = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={13}\n      defaultCenter={{ lat: 40.748817, lng: -73.985428 }}\n      defaultOptions={{\n        scrollwheel: false, //we disable de scroll over the map, it is a really annoing when you scroll through page\n        styles: [\n          {\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#1d2c4d\"\n              }\n            ]\n          },\n          {\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#8ec3b9\"\n              }\n            ]\n          },\n          {\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#1a3646\"\n              }\n            ]\n          },\n          {\n            featureType: \"administrative.country\",\n            elementType: \"geometry.stroke\",\n            stylers: [\n              {\n                color: \"#4b6878\"\n              }\n            ]\n          },\n          {\n            featureType: \"administrative.land_parcel\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#64779e\"\n              }\n            ]\n          },\n          {\n            featureType: \"administrative.province\",\n            elementType: \"geometry.stroke\",\n            stylers: [\n              {\n                color: \"#4b6878\"\n              }\n            ]\n          },\n          {\n            featureType: \"landscape.man_made\",\n            elementType: \"geometry.stroke\",\n            stylers: [\n              {\n                color: \"#334e87\"\n              }\n            ]\n          },\n          {\n            featureType: \"landscape.natural\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#023e58\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#283d6a\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#6f9ba5\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#1d2c4d\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi.park\",\n            elementType: \"geometry.fill\",\n            stylers: [\n              {\n                color: \"#023e58\"\n              }\n            ]\n          },\n          {\n            featureType: \"poi.park\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#3C7680\"\n              }\n            ]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#304a7d\"\n              }\n            ]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#98a5be\"\n              }\n            ]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#1d2c4d\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#2c6675\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"geometry.fill\",\n            stylers: [\n              {\n                color: \"#9d2a80\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"geometry.stroke\",\n            stylers: [\n              {\n                color: \"#9d2a80\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#b0d5ce\"\n              }\n            ]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#023e58\"\n              }\n            ]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#98a5be\"\n              }\n            ]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"labels.text.stroke\",\n            stylers: [\n              {\n                color: \"#1d2c4d\"\n              }\n            ]\n          },\n          {\n            featureType: \"transit.line\",\n            elementType: \"geometry.fill\",\n            stylers: [\n              {\n                color: \"#283d6a\"\n              }\n            ]\n          },\n          {\n            featureType: \"transit.station\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#3a4762\"\n              }\n            ]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"geometry\",\n            stylers: [\n              {\n                color: \"#0e1626\"\n              }\n            ]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"labels.text.fill\",\n            stylers: [\n              {\n                color: \"#4e6d70\"\n              }\n            ]\n          }\n        ]\n      }}\n    >\n      <Marker position={{ lat: 40.748817, lng: -73.985428 }} />\n    </GoogleMap>\n  ))\n);\n\nclass Map extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card className=\"card-plain\">\n                <CardHeader>Google Maps</CardHeader>\n                <CardBody>\n                  <div\n                    id=\"map\"\n                    className=\"map\"\n                    style={{ position: \"relative\", overflow: \"hidden\" }}\n                  >\n                    <MapWrapper\n                      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE\"\n                      loadingElement={<div style={{ height: `100%` }} />}\n                      containerElement={<div style={{ height: `100%` }} />}\n                      mapElement={<div style={{ height: `100%` }} />}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Map;\n","import Web3 from \"web3\";\n\nlet web3;\n\nif (typeof window.web3 !== \"undefined\") {\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  const provider = new Web3.providers.HttpProvider(\n    \"https://rinkeby.infura.io/v3/3dc8b2e3489c4260904f45a4e74a56dc\"\n  );\n  web3 = new Web3(provider);\n}\n\nexport default web3;\n","import web3 from \"./web3\";\nconst CampaignFactory = require(\"./build/contracts.json\");\n\nconst abi = CampaignFactory[\"covidextricate.sol\"].CovidExtricate.abi;\n\nconst instance = new web3.eth.Contract(\n  abi,\n  \"0x1A81559d69B63E0E17bd037932998663Cd759027\"\n);\n\nexport default instance;\n","import web3 from \"./web3\";\nconst CampaignFactory = require(\"./build/contracts.json\");\n\nconst abi = CampaignFactory[\"donationcamp.sol\"].DonationCamp.abi;\nconst instance = (address) => new web3.eth.Contract(abi, address);\n\nexport default instance;\n","import React, { useEffect, useState } from \"react\";\nimport camp from \"../ethereum/camp\";\nimport { Button, Input } from \"reactstrap\";\nimport web3 from \"../ethereum/web3\";\nconst Tr = (props) => {\n  const [money, update] = useState(0);\n  const [value, updateValue] = useState({\n    instance: \"\",\n    value: \"\",\n    name: \"\",\n    description: \"\",\n    link: \"\",\n    address: [],\n  });\n  useEffect(async () => {\n    const instance = camp(props.address);\n    const values = await instance.methods.getValues().call();\n    updateValue({\n      instance,\n      name: values[1],\n      description: values[2],\n      link: values[3],\n      value: values[0],\n      address: values[4],\n    });\n  }, []);\n  return (\n    <tr>\n      <td>{value.name}</td>\n      <td>{value.description}</td>\n      <td>{value.link}</td>\n\n      <td>\n        <input\n          value={money}\n          onChange={(e) => {\n            update(e.target.value);\n          }}\n        />\n      </td>\n      <td>\n        <Button\n          onClick={async () => {\n            const accounts = await web3.eth.getAccounts();\n            await value.instance.methods.contribute().send({\n              from: accounts[0],\n              value: web3.utils.toWei(money, \"ether\"),\n            });\n          }}\n        >\n          Donate\n        </Button>\n        <Button\n          onClick={async () => {\n            const accounts = await web3.eth.getAccounts();\n            await value.instance.methods\n              .transferFund()\n              .send({ from: accounts[0] });\n          }}\n        >\n          Collect\n        </Button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Tr;\n","import React, { useState, useContext } from \"react\";\nimport parent from \"../ethereum/parent\";\nimport web3 from \"../ethereum/web3\";\n\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst Details = (props) => {\n  const [value, update] = useState({\n    Amount: 0,\n    Name: \"\",\n    Description: \"\",\n    Links: \"\",\n  });\n\n  const onSubmit = async () => {\n    const accounts = await web3.eth.getAccounts();\n    const { Amount, Name, Description, Links } = value;\n    const result = await parent.methods\n      .CreateCamp(Amount, Name, Description, Links)\n      .send({ from: accounts[0] });\n    console.log(result);\n  };\n\n  return (\n    <>\n      <Col md=\"12\">\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Create A Camp</h5>\n          </CardHeader>\n          <CardBody>\n            <Form>\n              <Row>\n                <Col className=\"px-md-4\" md=\"3\">\n                  <FormGroup>\n                    <label>Amount Needed</label>\n                    <Input\n                      value={value.Amount}\n                      placeholder=\"Amount\"\n                      type=\"number\"\n                      onChange={(e) =>\n                        update({\n                          Name: value.Name,\n                          Description: value.Description,\n                          Links: value.Links,\n                          Amount: e.target.value,\n                        })\n                      }\n                    />\n                  </FormGroup>\n                </Col>\n                <Col className=\"pr-md-4\" md=\"5\">\n                  <FormGroup>\n                    <label>Name of the Individual or Institution</label>\n                    <Input\n                      value={value.Name}\n                      placeholder=\"Name\"\n                      type=\"text\"\n                      onChange={(e) =>\n                        update({\n                          Amount: value.Amount,\n                          Description: value.Description,\n                          Links: value.Links,\n                          Name: e.target.value,\n                        })\n                      }\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"12\">\n                  <FormGroup>\n                    <label>Description</label>\n                    <Input\n                      cols=\"80\"\n                      placeholder=\"Here can be your description\"\n                      rows=\"4\"\n                      type=\"textarea\"\n                      value={value.Description}\n                      onChange={(e) =>\n                        update({\n                          Amount: value.Amount,\n                          Description: e.target.value,\n                          Links: value.Links,\n                          Name: value.Name,\n                        })\n                      }\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Col className=\"pl-md-4\" md=\"4\">\n                <FormGroup>\n                  <label htmlFor=\"exampleInputEmail1\">Links</label>\n                  <Input\n                    placeholder=\"Links\"\n                    value={value.Links}\n                    onChange={(e) =>\n                      update({\n                        Amount: value.Amount,\n                        Description: value.Description,\n                        Links: e.target.value,\n                        Name: value.Name,\n                      })\n                    }\n                  />\n                </FormGroup>\n              </Col>\n            </Form>\n          </CardBody>\n          <CardFooter>\n            <Button\n              className=\"btn-fill\"\n              color=\"primary\"\n              type=\"submit\"\n              onClick={onSubmit}\n            >\n              Save\n            </Button>\n          </CardFooter>\n        </Card>\n      </Col>\n    </>\n  );\n};\n\nexport default Details;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react plugin for creating notifications over the dashboard\nimport NotificationAlert from \"react-notification-alert\";\nimport camps from \"../ethereum/parent\";\nimport Tr from \"./ts\";\nimport Details from \"./details\";\nimport {\n  Alert,\n  UncontrolledAlert,\n  Button,\n  Card,\n  Table,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nclass Notifications extends React.Component {\n  state = { accounts: [] };\n  notify = (place) => {\n    var color = Math.floor(Math.random() * 5 + 1);\n    var type;\n    switch (color) {\n      case 1:\n        type = \"primary\";\n        break;\n      case 2:\n        type = \"success\";\n        break;\n      case 3:\n        type = \"danger\";\n        break;\n      case 4:\n        type = \"warning\";\n        break;\n      case 5:\n        type = \"info\";\n        break;\n      default:\n        break;\n    }\n    var options = {};\n    options = {\n      place: place,\n      message: (\n        <div>\n          <div>\n            Welcome to <b>Black Dashboard React</b> - a beautiful freebie for\n            every web developer.\n          </div>\n        </div>\n      ),\n      type: type,\n      icon: \"tim-icons icon-bell-55\",\n      autoDismiss: 7,\n    };\n    this.refs.notificationAlert.notificationAlert(options);\n  };\n\n  async componentDidMount() {\n    const accounts = await camps.methods.getDeployedCamps().call();\n    this.setState({ accounts });\n  }\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Card>\n            <CardHeader>\n              <CardTitle tag=\"h4\">Donation Camps</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <Table className=\"tablesorter\" responsive>\n                <thead className=\"text-primary\">\n                  <tr>\n                    <th>Camp</th>\n                    <th>Description</th>\n                    <th>Link</th>\n                    <th className=\"text-center\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.accounts.map((value, index) => {\n                    return <Tr address={value} key={index} />;\n                  })}\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Details />\n\n          {/* \n          <div className=\"react-notification-alert-container\">\n            <NotificationAlert ref=\"notificationAlert\" />\n          </div>\n          <Row>\n            <Col md=\"6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Notifications Style</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Alert color=\"info\">\n                    <span>This is a plain notification</span>\n                  </Alert>\n                  <UncontrolledAlert color=\"info\">\n                    <span>This is a notification with close button.</span>\n                  </UncontrolledAlert>\n                  <UncontrolledAlert className=\"alert-with-icon\" color=\"info\">\n                    <span\n                      className=\"tim-icons icon-bell-55\"\n                      data-notify=\"icon\"\n                    />\n                    <span data-notify=\"message\">\n                      This is a notification with close button and icon.\n                    </span>\n                  </UncontrolledAlert>\n                  <UncontrolledAlert className=\"alert-with-icon\" color=\"info\">\n                    <span\n                      className=\"tim-icons icon-bell-55\"\n                      data-notify=\"icon\"\n                    />\n                    <span data-notify=\"message\">\n                      This is a notification with close button and icon and have\n                      many lines. You can see that the icon and the close button\n                      are always vertically aligned. This is a beautiful\n                      notification. So you don't have to worry about the style.\n                    </span>\n                  </UncontrolledAlert>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col md=\"6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Notification states</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <UncontrolledAlert color=\"primary\">\n                    <span>\n                      <b>Primary - </b>\n                      This is a regular notification made with \".alert-primary\"\n                    </span>\n                  </UncontrolledAlert>\n                  <UncontrolledAlert color=\"info\">\n                    <span>\n                      <b>Info - </b>\n                      This is a regular notification made with \".alert-info\"\n                    </span>\n                  </UncontrolledAlert>\n                  <UncontrolledAlert color=\"success\">\n                    <span>\n                      <b>Success - </b>\n                      This is a regular notification made with \".alert-success\"\n                    </span>\n                  </UncontrolledAlert>\n                  <UncontrolledAlert color=\"warning\">\n                    <span>\n                      <b>Warning - </b>\n                      This is a regular notification made with \".alert-warning\"\n                    </span>\n                  </UncontrolledAlert>\n                  <UncontrolledAlert color=\"danger\">\n                    <span>\n                      <b>Danger - </b>\n                      This is a regular notification made with \".alert-danger\"\n                    </span>\n                  </UncontrolledAlert>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col md=\"12\">\n              <Card>\n                <CardBody>\n                  <div className=\"places-buttons\">\n                    <Row>\n                      <Col className=\"ml-auto mr-auto text-center\" md=\"6\">\n                        <CardTitle tag=\"h4\">\n                          Notifications Places\n                          <p className=\"category\">\n                            Click to view notifications\n                          </p>\n                        </CardTitle>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"ml-auto mr-auto\" lg=\"8\">\n                        <Row>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"tl\")}\n                            >\n                              Top Left\n                            </Button>\n                          </Col>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"tc\")}\n                            >\n                              Top Center\n                            </Button>\n                          </Col>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"tr\")}\n                            >\n                              Top Right\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"ml-auto mr-auto\" lg=\"8\">\n                        <Row>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"bl\")}\n                            >\n                              Bottom Left\n                            </Button>\n                          </Col>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"bc\")}\n                            >\n                              Bottom Center\n                            </Button>\n                          </Col>\n                          <Col md=\"4\">\n                            <Button\n                              block\n                              color=\"primary\"\n                              onClick={() => this.notify(\"br\")}\n                            >\n                              Bottom Right\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row> */}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Notifications;\n","import NotificationCopy from \"./Notifications copy\";\nimport React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\n\nclass Notification extends Component {\n  state = { isMetaMask: false, accounts: [], installMetamask: false };\n\n  render() {\n    console.log(this.state);\n    return (\n      <React.Fragment>\n        {!this.state.isMetaMask && (\n          <div className=\"content\">\n            >\n            <Button\n              onClick={async () => {\n                if (\n                  typeof window.web3 !== \"undefined\" &&\n                  window.web3.currentProvider.isMetaMask\n                ) {\n                  const accounts = await window.ethereum.enable();\n                  this.setState({ isMetaMask: true, accounts });\n                } else {\n                  this.setState({ installMetamask: true });\n                }\n              }}\n            >\n              Login With Metamask\n            </Button>\n            {this.state.installMetamask && (\n              <a href=\"https://metamask.io/download.html\" target=\"_blank\">\n                <Button>Install Metamask</Button>\n              </a>\n            )}\n          </div>\n        )}\n        {this.state.isMetaMask && (\n          <NotificationCopy accounts={this.state.accounts} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Notification;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Tables extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Simple Table</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"tablesorter\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>Name</th>\n                        <th>Country</th>\n                        <th>City</th>\n                        <th className=\"text-center\">Salary</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Dakota Rice</td>\n                        <td>Niger</td>\n                        <td>Oud-Turnhout</td>\n                        <td className=\"text-center\">$36,738</td>\n                      </tr>\n                      <tr>\n                        <td>Minerva Hooper</td>\n                        <td>Curaçao</td>\n                        <td>Sinaai-Waas</td>\n                        <td className=\"text-center\">$23,789</td>\n                      </tr>\n                      <tr>\n                        <td>Sage Rodriguez</td>\n                        <td>Netherlands</td>\n                        <td>Baileux</td>\n                        <td className=\"text-center\">$56,142</td>\n                      </tr>\n                      <tr>\n                        <td>Philip Chaney</td>\n                        <td>Korea, South</td>\n                        <td>Overland Park</td>\n                        <td className=\"text-center\">$38,735</td>\n                      </tr>\n                      <tr>\n                        <td>Doris Greene</td>\n                        <td>Malawi</td>\n                        <td>Feldkirchen in Kärnten</td>\n                        <td className=\"text-center\">$63,542</td>\n                      </tr>\n                      <tr>\n                        <td>Mason Porter</td>\n                        <td>Chile</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-center\">$78,615</td>\n                      </tr>\n                      <tr>\n                        <td>Jon Porter</td>\n                        <td>Portugal</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-center\">$98,615</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col md=\"12\">\n              <Card className=\"card-plain\">\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Table on Plain Background</CardTitle>\n                  <p className=\"category\">Here is a subtitle for this table</p>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"tablesorter\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>Name</th>\n                        <th>Country</th>\n                        <th>City</th>\n                        <th className=\"text-center\">Salary</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Dakota Rice</td>\n                        <td>Niger</td>\n                        <td>Oud-Turnhout</td>\n                        <td className=\"text-center\">$36,738</td>\n                      </tr>\n                      <tr>\n                        <td>Minerva Hooper</td>\n                        <td>Curaçao</td>\n                        <td>Sinaai-Waas</td>\n                        <td className=\"text-center\">$23,789</td>\n                      </tr>\n                      <tr>\n                        <td>Sage Rodriguez</td>\n                        <td>Netherlands</td>\n                        <td>Baileux</td>\n                        <td className=\"text-center\">$56,142</td>\n                      </tr>\n                      <tr>\n                        <td>Philip Chaney</td>\n                        <td>Korea, South</td>\n                        <td>Overland Park</td>\n                        <td className=\"text-center\">$38,735</td>\n                      </tr>\n                      <tr>\n                        <td>Doris Greene</td>\n                        <td>Malawi</td>\n                        <td>Feldkirchen in Kärnten</td>\n                        <td className=\"text-center\">$63,542</td>\n                      </tr>\n                      <tr>\n                        <td>Mason Porter</td>\n                        <td>Chile</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-center\">$78,615</td>\n                      </tr>\n                      <tr>\n                        <td>Jon Porter</td>\n                        <td>Portugal</td>\n                        <td>Gloucester</td>\n                        <td className=\"text-center\">$98,615</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Tables;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport chartData from \"../variables/charData1.js\";\n\nconst Graph = (props) => {\n  var arr1 = [];\n  var arr2 = [];\n  let recorddata = \"\";\n  props.data.forEach((value, index) => {\n    const date = value.record_date.substr(0, 10);\n    if (date != recorddata) {\n      arr1.push(date);\n      const str = value.total_cases.replace(\",\", \"\");\n      arr2.push(parseInt(str));\n      recorddata = date;\n    }\n  });\n  const ChartData = chartData(arr1.slice(0, 20), arr2.slice(0, 20));\n  return (\n    <Card className=\"card-chart\">\n      <CardHeader>\n        <h5 className=\"card-category\"></h5>\n        <CardTitle tag=\"h3\">\n          <i className=\"tim-icons icon-delivery-fast text-primary\" />\n          Total Cases (Graphical Representation)\n        </CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className=\"chart-area\">\n          <Line data={ChartData.data} options={ChartData.options} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Graph;\n","import React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Graph from \"../components/graphLine\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst GETLIST = gql`\n  query apiaccess($inputString: String) {\n    rapidapi {\n      historyCountry(input: $inputString) {\n        country_name\n        total_cases\n        active_cases\n        new_cases\n        total_deaths\n        new_deaths\n        total_recovered\n        total_cases_per1m\n        record_date\n      }\n    }\n  }\n`;\nconst Timeline = (props) => {\n  const query = useQuery(GETLIST, {\n    variables: { inputString: props.country },\n  });\n  if (query.loading) return <div className=\"content\">Loading...</div>;\n  console.log(query.data);\n  if (query.data.rapidapi.historyCountry) {\n    var array = query.data.rapidapi.historyCountry.reverse().slice(300);\n  } else array = [];\n  console.log(array);\n  return (\n    <>\n      <div className=\"content\">\n        <Graph data={array} />\n        <Row>\n          <Col md=\"12\">\n            <Card className=\"card-tasks\">\n              <CardHeader>\n                <CardTitle tag=\"h4\">Timeline (last 300 updates)</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"table-full-width table-responsive\">\n                  <Table className=\"tablesorter\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        {/* <th>Name</th> */}\n                        <th>Total Cases</th>\n                        <th>Active Cases</th>\n                        <th>New Cases</th>\n                        <th>Total Deaths</th>\n                        <th>New Deaths</th>\n                        <th>Total Recovered</th>\n                        <th>Cases Per 1M</th>\n                        <th>Date</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {array.map((value, element) => {\n                        return (\n                          <tr>\n                            {/* <th>{value.country_name}</th> */}\n                            <th>{value.total_cases}</th>\n                            <th>{value.active_cases}</th>\n                            <th>{value.new_cases}</th>\n                            <th>{value.total_deaths}</th>\n                            <th>{value.new_deaths}</th>\n                            <th>{value.total_recovered}</th>\n                            <th>{value.total_cases_per1m}</th>\n                            <th>{value.record_date}</th>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nexport default Timeline;\n","import React, { Component, useState } from \"react\";\nimport Table from \"./timeline\";\nimport { InputGroup, Button, Input } from \"reactstrap\";\n\nfunction TypographyContainer() {\n  const [values, update] = useState({ values: \"\", state: false });\n\n  return (\n    <>\n      <div className=\"content\">\n        <InputGroup>\n          <Input\n            placeholder=\"username\"\n            value={values.values}\n            onChange={(e) => {\n              update({ values: e.target.value, state: false });\n            }}\n          />\n        </InputGroup>\n        <br />\n        <Button onClick={() => update({ values: values.values, state: true })}>\n          Search\n        </Button>\n        {values.state && <Table country={values.values} />}\n      </div>\n    </>\n  );\n}\n\nexport default TypographyContainer;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass UserProfile extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Edit Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"5\">\n                        <FormGroup>\n                          <label>Company (disabled)</label>\n                          <Input\n                            defaultValue=\"Creative Code Inc.\"\n                            disabled\n                            placeholder=\"Company\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"px-md-1\" md=\"3\">\n                        <FormGroup>\n                          <label>Username</label>\n                          <Input\n                            defaultValue=\"michael23\"\n                            placeholder=\"Username\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"4\">\n                        <FormGroup>\n                          <label htmlFor=\"exampleInputEmail1\">\n                            Email address\n                          </label>\n                          <Input placeholder=\"mike@email.com\" type=\"email\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label>First Name</label>\n                          <Input\n                            defaultValue=\"Mike\"\n                            placeholder=\"Company\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label>Last Name</label>\n                          <Input\n                            defaultValue=\"Andrew\"\n                            placeholder=\"Last Name\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"12\">\n                        <FormGroup>\n                          <label>Address</label>\n                          <Input\n                            defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                            placeholder=\"Home Address\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"4\">\n                        <FormGroup>\n                          <label>City</label>\n                          <Input\n                            defaultValue=\"Mike\"\n                            placeholder=\"City\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"px-md-1\" md=\"4\">\n                        <FormGroup>\n                          <label>Country</label>\n                          <Input\n                            defaultValue=\"Andrew\"\n                            placeholder=\"Country\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"4\">\n                        <FormGroup>\n                          <label>Postal Code</label>\n                          <Input placeholder=\"ZIP Code\" type=\"number\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"8\">\n                        <FormGroup>\n                          <label>About Me</label>\n                          <Input\n                            cols=\"80\"\n                            defaultValue=\"Lamborghini Mercy, Your chick she so thirsty, I'm in\n                            that two seat Lambo.\"\n                            placeholder=\"Here can be your description\"\n                            rows=\"4\"\n                            type=\"textarea\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n                <CardFooter>\n                  <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col md=\"4\">\n              <Card className=\"card-user\">\n                <CardBody>\n                  <CardText />\n                  <div className=\"author\">\n                    <div className=\"block block-one\" />\n                    <div className=\"block block-two\" />\n                    <div className=\"block block-three\" />\n                    <div className=\"block block-four\" />\n                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                      <img\n                        alt=\"...\"\n                        className=\"avatar\"\n                        src={require(\"assets/img/emilyz.jpg\")}\n                      />\n                      <h5 className=\"title\">Mike Andrew</h5>\n                    </a>\n                    <p className=\"description\">Ceo/Co-Founder</p>\n                  </div>\n                  <div className=\"card-description\">\n                    Do not be scared of the truth because we need to restart the\n                    human foundation in truth And I love you like Kanye loves\n                    Kanye I love Rick Owens’ bed design but the back is...\n                  </div>\n                </CardBody>\n                <CardFooter>\n                  <div className=\"button-container\">\n                    <Button className=\"btn-icon btn-round\" color=\"facebook\">\n                      <i className=\"fab fa-facebook\" />\n                    </Button>\n                    <Button className=\"btn-icon btn-round\" color=\"twitter\">\n                      <i className=\"fab fa-twitter\" />\n                    </Button>\n                    <Button className=\"btn-icon btn-round\" color=\"google\">\n                      <i className=\"fab fa-google-plus\" />\n                    </Button>\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProfile;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\n\nimport logo from \"assets/img/react-logo.png\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"blue\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1,\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n  getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  };\n  getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            bgColor={this.state.backgroundColor}\n            logo={{\n              outterLink: \"https://www.creative-tim.com/\",\n              text: \"Corona Extricate\",\n              imgSrc: logo,\n            }}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <AdminNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n            />\n            <Switch>\n              {this.getRoutes(routes)}\n              <Redirect from=\"*\" to=\"/admin/dashboard\" />\n            </Switch>\n          </div>\n        </div>\n        <FixedPlugin\n          bgColor={this.state.backgroundColor}\n          handleBgClick={this.handleBgClick}\n        />\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.js\";\nimport Map from \"views/Map.js\";\nimport Notifications from \"views/Notifications.js\";\nimport TableList from \"views/TableList.js\";\nimport Typography from \"views/TypographyCopy.js\";\nimport UserProfile from \"views/UserProfile.js\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Statistics\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n\n  // {\n  //   path: \"/map\",\n  //   name: \"Map\",\n  //   icon: \"tim-icons icon-pin\",\n  //   component: Map,\n  //   layout: \"/admin\",\n  // },\n\n  {\n    path: \"/typography\",\n    name: \"Timeline\",\n    icon: \"tim-icons icon-align-center\",\n    component: Typography,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/notifications\",\n    name: \"Donation\",\n    icon: \"tim-icons icon-bell-55\",\n    component: Notifications,\n    layout: \"/admin\",\n  },\n  // {\n  //   path: \"/user-profile\",\n  //   name: \"Doctor\",\n  //   icon: \"tim-icons icon-single-02\",\n  //   component: UserProfile,\n  //   layout: \"/admin\",\n  // },\n];\nexport default routes;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport client from \"./graphQl.js\";\nimport AdminLayout from \"layouts/Admin/Admin.js\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <ApolloProvider client={client}>\n      <Switch>\n        <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n        <Redirect from=\"/\" to=\"/admin/dashboard\" />\n      </Switch>\n    </ApolloProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}